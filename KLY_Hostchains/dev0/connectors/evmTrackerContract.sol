//SPDX-License-Identifier: MIT
pragma solidity >=0.7.0 <0.9.0;


//______________________________________________________________IMPORT SECTION______________________________________________________________


/**
 * 
 * @title KLYNTAR
 * @dev @Vlad@ Chernenko
 * 
 *  Created for pack dev0
 *
 *  Simplest contract to set checkpoints in EVM compatible chains to track VM logs and make sure symbiote state is valid and OK
 *
 *
 */
 
contract KlyntarHostchainDev0 {
        
    event Checkpoint(string payload,uint256 blocktime);


	constructor(string memory initialCheckpoint){

		emit Checkpoint(initialCheckpoint,block.timestamp);

	}

//_______________________________________________________SINGLE SIMPLE FUNCTION_________________________________________________________

    function change(string memory aggregatedCheckpoint) public {
    
        //Emit event to be tracked by VM
        emit Checkpoint(aggregatedCheckpoint,block.timestamp);
        
    }
      
}

/*




 ██╗ ██╗      █████╗ ██████╗ ██╗     ██╗ ██╗ 
████████╗    ██╔══██╗██╔══██╗██║    ████████╗
╚██╔═██╔╝    ███████║██████╔╝██║    ╚██╔═██╔╝
████████╗    ██╔══██║██╔══██╗██║    ████████╗
╚██╔═██╔╝    ██║  ██║██████╔╝██║    ╚██╔═██╔╝
 ╚═╝ ╚═╝     ╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝ ╚═╝ 



[
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "initialCheckpoint",
				"type": "string"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "string",
				"name": "payload",
				"type": "string"
			}
		],
		"name": "Checkpoint",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "aggregatedCheckpoint",
				"type": "string"
			}
		],
		"name": "change",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]


------------------- WITH NO CONSTRUCTOR -------------------------


[
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "string",
				"name": "payload",
				"type": "string"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "blocktime",
				"type": "uint256"
			}
		],
		"name": "Checkpoint",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "aggregatedCheckpoint",
				"type": "string"
			}
		],
		"name": "change",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]

 ██╗ ██╗     ██████╗ ██╗   ██╗████████╗███████╗ ██████╗ ██████╗ ██████╗ ███████╗     ██╗ ██╗ 
████████╗    ██╔══██╗╚██╗ ██╔╝╚══██╔══╝██╔════╝██╔════╝██╔═══██╗██╔══██╗██╔════╝    ████████╗
╚██╔═██╔╝    ██████╔╝ ╚████╔╝    ██║   █████╗  ██║     ██║   ██║██║  ██║█████╗      ╚██╔═██╔╝
████████╗    ██╔══██╗  ╚██╔╝     ██║   ██╔══╝  ██║     ██║   ██║██║  ██║██╔══╝      ████████╗
╚██╔═██╔╝    ██████╔╝   ██║      ██║   ███████╗╚██████╗╚██████╔╝██████╔╝███████╗    ╚██╔═██╔╝
 ╚═╝ ╚═╝     ╚═════╝    ╚═╝      ╚═╝   ╚══════╝ ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝     ╚═╝ ╚═╝ 



0x608060405234801561001057600080fd5b506040516105c53803806105c5833981810160405281019061003291906100df565b7fb1fd29284b7a83462eb2babd0d9990b345c49033826b6cfacfff1ed216beedc0816040516100619190610161565b60405180910390a1506102ad565b600061008261007d846101a8565b610183565b90508281526020810184848401111561009e5761009d61028d565b5b6100a98482856101f5565b509392505050565b600082601f8301126100c6576100c5610288565b5b81516100d684826020860161006f565b91505092915050565b6000602082840312156100f5576100f4610297565b5b600082015167ffffffffffffffff81111561011357610112610292565b5b61011f848285016100b1565b91505092915050565b6000610133826101d9565b61013d81856101e4565b935061014d8185602086016101f5565b6101568161029c565b840191505092915050565b6000602082019050818103600083015261017b8184610128565b905092915050565b600061018d61019e565b90506101998282610228565b919050565b6000604051905090565b600067ffffffffffffffff8211156101c3576101c2610259565b5b6101cc8261029c565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102135780820151818401526020810190506101f8565b83811115610222576000848401525b50505050565b6102318261029c565b810181811067ffffffffffffffff821117156102505761024f610259565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610309806102bc6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c1dcab1414610030575b600080fd5b61004a600480360381019061004591906100f6565b61004c565b005b7fb1fd29284b7a83462eb2babd0d9990b345c49033826b6cfacfff1ed216beedc08160405161007b9190610178565b60405180910390a150565b6000610099610094846101bf565b61019a565b9050828152602081018484840111156100b5576100b46102b3565b5b6100c084828561020c565b509392505050565b600082601f8301126100dd576100dc6102ae565b5b81356100ed848260208601610086565b91505092915050565b60006020828403121561010c5761010b6102bd565b5b600082013567ffffffffffffffff81111561012a576101296102b8565b5b610136848285016100c8565b91505092915050565b600061014a826101f0565b61015481856101fb565b935061016481856020860161021b565b61016d816102c2565b840191505092915050565b60006020820190508181036000830152610192818461013f565b905092915050565b60006101a46101b5565b90506101b0828261024e565b919050565b6000604051905090565b600067ffffffffffffffff8211156101da576101d961027f565b5b6101e3826102c2565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b8381101561023957808201518184015260208101905061021e565b83811115610248576000848401525b50505050565b610257826102c2565b810181811067ffffffffffffffff821117156102765761027561027f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f830116905091905056fea264697066735822122014338ee91455af1033f3056a66e159b311eb84de769756a08cb7add3eb840c7764736f6c63430008070033

+pass initial checkpoint via constructor

----------- Without constructor -----------

608060405234801561001057600080fd5b50610332806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c1dcab1414610030575b600080fd5b61004a600480360381019061004591906100f8565b61004c565b005b7f5d882878f6c50530e63829854e64755332e385dbf9dd9c2798e07d9c88c67e40814260405161007d929190610189565b60405180910390a150565b600061009b610096846101de565b6101b9565b9050828152602081018484840111156100b7576100b66102dc565b5b6100c2848285610235565b509392505050565b600082601f8301126100df576100de6102d7565b5b81356100ef848260208601610088565b91505092915050565b60006020828403121561010e5761010d6102e6565b5b600082013567ffffffffffffffff81111561012c5761012b6102e1565b5b610138848285016100ca565b91505092915050565b600061014c8261020f565b610156818561021a565b9350610166818560208601610244565b61016f816102eb565b840191505092915050565b6101838161022b565b82525050565b600060408201905081810360008301526101a38185610141565b90506101b2602083018461017a565b9392505050565b60006101c36101d4565b90506101cf8282610277565b919050565b6000604051905090565b600067ffffffffffffffff8211156101f9576101f86102a8565b5b610202826102eb565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b83811015610262578082015181840152602081019050610247565b83811115610271576000848401525b50505050565b610280826102eb565b810181811067ffffffffffffffff8211171561029f5761029e6102a8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f830116905091905056fea2646970667358221220398ea5072fb57de9ad9b51267ced7a3fffa5481069b2975c4d818bdf41b0ca5864736f6c63430008070033


*/